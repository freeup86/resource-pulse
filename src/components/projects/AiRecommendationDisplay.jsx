import React, { useState } from 'react';
import { formatCurrency } from '../../utils/dateUtils';

/**
 * Component to display AI-generated skill recommendations
 */
const AiRecommendationDisplay = ({ recommendations, onSave, onCancel, isLoading }) => {
  const [savingItemId, setSavingItemId] = useState(null);
  if (!recommendations || recommendations.length === 0) {
    return (
      <div className="p-6 bg-white rounded-lg shadow-md">
        <div className="text-center text-gray-500">
          <p>No recommendations available. Try again later.</p>
          <button 
            className="mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
            onClick={onCancel}
          >
            Close
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="p-6 bg-white rounded-lg shadow-md max-w-4xl w-full max-h-[80vh] overflow-y-auto">
      <div className="flex justify-between items-center mb-4">
        <h2 className="text-xl font-bold text-gray-800">AI-Generated Skill Recommendations</h2>
        <div className="flex space-x-2">
          <button 
            className="px-3 py-1 bg-gray-200 text-gray-800 rounded hover:bg-gray-300"
            onClick={onCancel}
          >
            Close / Cancel
          </button>
        </div>
      </div>
      
      <p className="text-sm text-gray-600 mb-4">
        These recommendations were generated by AI based on the project's required skills. 
        You can save them to the project or modify them as needed.
      </p>
      
      <div className="space-y-4">
        {recommendations.map((rec, index) => (
          <div 
            key={`rec-${index}`} 
            className="border border-gray-200 rounded-lg p-4 transition-all hover:shadow-md"
          >
            <div className="flex justify-between">
              <h3 className="font-medium text-lg">{rec.title}</h3>
              <span className="text-sm text-gray-600">
                {rec.estimatedTimeHours && `${rec.estimatedTimeHours} hours`}
                {rec.cost && rec.estimatedTimeHours && ' â€¢ '}
                {rec.cost && formatCurrency(rec.cost, 'USD')}
              </span>
            </div>
            
            <p className="text-sm font-medium text-blue-600 mt-1">
              Skill: {rec.skillName}
            </p>
            
            <p className="text-sm text-gray-700 mt-2">
              {rec.description}
            </p>
            
            {rec.resourceUrl && (
              <a 
                href={rec.resourceUrl} 
                target="_blank" 
                rel="noopener noreferrer"
                className="text-sm text-blue-600 hover:underline mt-2 inline-block"
              >
                View Resource
              </a>
            )}
            
            <div className="mt-3 text-right">
              <button 
                className={`px-3 py-1 ${savingItemId === index ? 'bg-gray-400' : 'bg-green-600 hover:bg-green-700'} text-white text-sm rounded`}
                onClick={() => {
                  setSavingItemId(index);
                  onSave(rec).finally(() => setSavingItemId(null));
                }}
                disabled={savingItemId !== null}
              >
                {savingItemId === index ? (
                  <div className="flex items-center">
                    <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Saving...
                  </div>
                ) : 'Save Recommendation'}
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default AiRecommendationDisplay;